// Code generated by protoc-gen-go. DO NOT EDIT.
// source: consumer.proto

package grpcserver

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConsumeRequest struct {
	TopicName            string   `protobuf:"bytes,1,opt,name=topicName,proto3" json:"topicName,omitempty"`
	TopicGroup           string   `protobuf:"bytes,2,opt,name=topicGroup,proto3" json:"topicGroup,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	ConsumeCount         int32    `protobuf:"varint,4,opt,name=consumeCount,proto3" json:"consumeCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumeRequest) Reset()         { *m = ConsumeRequest{} }
func (m *ConsumeRequest) String() string { return proto.CompactTextString(m) }
func (*ConsumeRequest) ProtoMessage()    {}
func (*ConsumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dcb7dada8cc1b, []int{0}
}

func (m *ConsumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeRequest.Unmarshal(m, b)
}
func (m *ConsumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeRequest.Marshal(b, m, deterministic)
}
func (m *ConsumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeRequest.Merge(m, src)
}
func (m *ConsumeRequest) XXX_Size() int {
	return xxx_messageInfo_ConsumeRequest.Size(m)
}
func (m *ConsumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeRequest proto.InternalMessageInfo

func (m *ConsumeRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *ConsumeRequest) GetTopicGroup() string {
	if m != nil {
		return m.TopicGroup
	}
	return ""
}

func (m *ConsumeRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ConsumeRequest) GetConsumeCount() int32 {
	if m != nil {
		return m.ConsumeCount
	}
	return 0
}

type ConsumeResponse struct {
	Code                 string                  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Body                 []*ConsumeResponse_Body `protobuf:"bytes,2,rep,name=body,proto3" json:"body,omitempty"`
	Message              string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ConsumeResponse) Reset()         { *m = ConsumeResponse{} }
func (m *ConsumeResponse) String() string { return proto.CompactTextString(m) }
func (*ConsumeResponse) ProtoMessage()    {}
func (*ConsumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dcb7dada8cc1b, []int{1}
}

func (m *ConsumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeResponse.Unmarshal(m, b)
}
func (m *ConsumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeResponse.Marshal(b, m, deterministic)
}
func (m *ConsumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeResponse.Merge(m, src)
}
func (m *ConsumeResponse) XXX_Size() int {
	return xxx_messageInfo_ConsumeResponse.Size(m)
}
func (m *ConsumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeResponse proto.InternalMessageInfo

func (m *ConsumeResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ConsumeResponse) GetBody() []*ConsumeResponse_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *ConsumeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ConsumeResponse_Body struct {
	TopicName            string   `protobuf:"bytes,1,opt,name=topicName,proto3" json:"topicName,omitempty"`
	TopicGroup           string   `protobuf:"bytes,2,opt,name=topicGroup,proto3" json:"topicGroup,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Body                 []byte   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumeResponse_Body) Reset()         { *m = ConsumeResponse_Body{} }
func (m *ConsumeResponse_Body) String() string { return proto.CompactTextString(m) }
func (*ConsumeResponse_Body) ProtoMessage()    {}
func (*ConsumeResponse_Body) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dcb7dada8cc1b, []int{1, 0}
}

func (m *ConsumeResponse_Body) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeResponse_Body.Unmarshal(m, b)
}
func (m *ConsumeResponse_Body) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeResponse_Body.Marshal(b, m, deterministic)
}
func (m *ConsumeResponse_Body) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeResponse_Body.Merge(m, src)
}
func (m *ConsumeResponse_Body) XXX_Size() int {
	return xxx_messageInfo_ConsumeResponse_Body.Size(m)
}
func (m *ConsumeResponse_Body) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeResponse_Body.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeResponse_Body proto.InternalMessageInfo

func (m *ConsumeResponse_Body) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *ConsumeResponse_Body) GetTopicGroup() string {
	if m != nil {
		return m.TopicGroup
	}
	return ""
}

func (m *ConsumeResponse_Body) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ConsumeResponse_Body) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type CommitRequest struct {
	TopicName            string   `protobuf:"bytes,1,opt,name=topicName,proto3" json:"topicName,omitempty"`
	TopicGroup           string   `protobuf:"bytes,2,opt,name=topicGroup,proto3" json:"topicGroup,omitempty"`
	LatestOffset         int64    `protobuf:"varint,3,opt,name=latestOffset,proto3" json:"latestOffset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dcb7dada8cc1b, []int{2}
}

func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (m *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(m, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *CommitRequest) GetTopicGroup() string {
	if m != nil {
		return m.TopicGroup
	}
	return ""
}

func (m *CommitRequest) GetLatestOffset() int64 {
	if m != nil {
		return m.LatestOffset
	}
	return 0
}

type CommitResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitResponse) Reset()         { *m = CommitResponse{} }
func (m *CommitResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()    {}
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dcb7dada8cc1b, []int{3}
}

func (m *CommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse.Unmarshal(m, b)
}
func (m *CommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse.Marshal(b, m, deterministic)
}
func (m *CommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse.Merge(m, src)
}
func (m *CommitResponse) XXX_Size() int {
	return xxx_messageInfo_CommitResponse.Size(m)
}
func (m *CommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse proto.InternalMessageInfo

func (m *CommitResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CommitResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ConsumeRequest)(nil), "grpcserver.ConsumeRequest")
	proto.RegisterType((*ConsumeResponse)(nil), "grpcserver.ConsumeResponse")
	proto.RegisterType((*ConsumeResponse_Body)(nil), "grpcserver.ConsumeResponse.Body")
	proto.RegisterType((*CommitRequest)(nil), "grpcserver.CommitRequest")
	proto.RegisterType((*CommitResponse)(nil), "grpcserver.CommitResponse")
}

func init() { proto.RegisterFile("consumer.proto", fileDescriptor_376dcb7dada8cc1b) }

var fileDescriptor_376dcb7dada8cc1b = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x2d, 0x54, 0x08, 0x23, 0x62, 0x32, 0x07, 0xb3, 0x56, 0x63, 0x9a, 0x3d, 0xf5, 0xd4,
	0x03, 0x7a, 0x36, 0x51, 0x4c, 0xbc, 0x69, 0xb2, 0x3e, 0x01, 0x94, 0x81, 0x90, 0x58, 0x66, 0xd9,
	0xdd, 0x92, 0xf0, 0x0a, 0x3e, 0x82, 0x2f, 0xe8, 0x6b, 0x18, 0xb6, 0x45, 0xa8, 0x41, 0x4e, 0x7a,
	0xeb, 0xfc, 0x33, 0xdd, 0xfd, 0xe6, 0xff, 0x17, 0x7a, 0x19, 0xcf, 0x6d, 0x91, 0x93, 0x49, 0xb5,
	0x61, 0xc7, 0x08, 0x53, 0xa3, 0x33, 0x4b, 0x66, 0x49, 0x46, 0xbe, 0x07, 0xd0, 0x1b, 0x94, 0x6d,
	0x45, 0x8b, 0x82, 0xac, 0xc3, 0x2b, 0xe8, 0x38, 0xd6, 0xb3, 0xec, 0x79, 0x98, 0x93, 0x08, 0xe2,
	0x20, 0xe9, 0xa8, 0xad, 0x80, 0xd7, 0x00, 0xbe, 0x78, 0x32, 0x5c, 0x68, 0xd1, 0xf0, 0xed, 0x1d,
	0x05, 0xcf, 0xa1, 0xc5, 0x93, 0x89, 0x25, 0x27, 0x9a, 0x71, 0x90, 0x34, 0x55, 0x55, 0xa1, 0x84,
	0x6e, 0x85, 0x31, 0xe0, 0x62, 0xee, 0x44, 0x18, 0x07, 0xc9, 0xb1, 0xaa, 0x69, 0xf2, 0x33, 0x80,
	0xb3, 0x6f, 0x18, 0xab, 0x79, 0x6e, 0x09, 0x11, 0xc2, 0x8c, 0xc7, 0x1b, 0x10, 0xff, 0x8d, 0xb7,
	0x10, 0x8e, 0x78, 0xbc, 0x12, 0x8d, 0xb8, 0x99, 0x9c, 0xf4, 0xe3, 0x74, 0xbb, 0x4f, 0xfa, 0xe3,
	0xf7, 0xf4, 0x81, 0xc7, 0x2b, 0xe5, 0xa7, 0x51, 0x40, 0x3b, 0x27, 0x6b, 0x87, 0x53, 0xf2, 0x68,
	0x1d, 0xb5, 0x29, 0x23, 0x0d, 0xe1, 0x7a, 0xee, 0x9f, 0x36, 0xc7, 0x8a, 0x76, 0xbd, 0x71, 0xb7,
	0x64, 0x91, 0x0b, 0x38, 0x1d, 0x70, 0x9e, 0xcf, 0xdc, 0xdf, 0x98, 0x2e, 0xa1, 0xfb, 0x36, 0x74,
	0x64, 0xdd, 0xcb, 0x2e, 0x40, 0x4d, 0x93, 0x77, 0xeb, 0xa0, 0xcb, 0x2b, 0x0f, 0x58, 0xfb, 0xab,
	0x49, 0xfd, 0x8f, 0x6d, 0x38, 0xe6, 0x95, 0xcc, 0x72, 0x96, 0x11, 0x3e, 0x42, 0xbb, 0x92, 0x30,
	0xda, 0x9b, 0x82, 0x5f, 0x2e, 0xba, 0x3c, 0x90, 0x90, 0x3c, 0xc2, 0x7b, 0x68, 0x95, 0x64, 0x78,
	0x51, 0x1f, 0xdc, 0x31, 0x28, 0x8a, 0xf6, 0xb5, 0x36, 0x47, 0x8c, 0x5a, 0xfe, 0x65, 0xdf, 0x7c,
	0x05, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x23, 0x20, 0x47, 0xeb, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConsumerServiceClient is the client API for ConsumerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConsumerServiceClient interface {
	Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (*ConsumeResponse, error)
	Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error)
}

type consumerServiceClient struct {
	cc *grpc.ClientConn
}

func NewConsumerServiceClient(cc *grpc.ClientConn) ConsumerServiceClient {
	return &consumerServiceClient{cc}
}

func (c *consumerServiceClient) Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (*ConsumeResponse, error) {
	out := new(ConsumeResponse)
	err := c.cc.Invoke(ctx, "/grpcserver.ConsumerService/Consume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerServiceClient) Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error) {
	out := new(CommitResponse)
	err := c.cc.Invoke(ctx, "/grpcserver.ConsumerService/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConsumerServiceServer is the server API for ConsumerService service.
type ConsumerServiceServer interface {
	Consume(context.Context, *ConsumeRequest) (*ConsumeResponse, error)
	Commit(context.Context, *CommitRequest) (*CommitResponse, error)
}

// UnimplementedConsumerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConsumerServiceServer struct {
}

func (*UnimplementedConsumerServiceServer) Consume(ctx context.Context, req *ConsumeRequest) (*ConsumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Consume not implemented")
}
func (*UnimplementedConsumerServiceServer) Commit(ctx context.Context, req *CommitRequest) (*CommitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}

func RegisterConsumerServiceServer(s *grpc.Server, srv ConsumerServiceServer) {
	s.RegisterService(&_ConsumerService_serviceDesc, srv)
}

func _ConsumerService_Consume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerServiceServer).Consume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.ConsumerService/Consume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerServiceServer).Consume(ctx, req.(*ConsumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerService_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerServiceServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.ConsumerService/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerServiceServer).Commit(ctx, req.(*CommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConsumerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcserver.ConsumerService",
	HandlerType: (*ConsumerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Consume",
			Handler:    _ConsumerService_Consume_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _ConsumerService_Commit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "consumer.proto",
}
